{"version":3,"sources":["../src/clean-webpack-plugin.ts"],"names":["CleanWebpackPlugin","constructor","options","Array","isArray","Error","allowExternal","dangerouslyAllowCleanPatternsOutsideProject","dry","console","warn","verbose","cleanStaleWebpackAssets","protectWebpackAssets","cleanAfterEveryBuildPatterns","cleanOnceBeforeBuildPatterns","currentAssets","initialClean","outputPath","apply","bind","handleInitial","handleDone","removeFiles","compiler","output","path","hooks","length","compile","tap","plugin","done","stats","hasErrors","assets","toJson","map","asset","name","staleFiles","filter","previousAsset","assetCurrent","includes","sort","removePatterns","push","patterns","deleted","force","cwd","dryRun","dot","ignore","forEach","file","filename","relative","process","message","error","needsForce","test"],"mappings":"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","sourcesContent":["import { Compiler, Stats } from 'webpack';\nimport path from 'path';\nimport { sync as delSync } from 'del';\n\ninterface Options {\n    /**\n     * Simulate the removal of files\n     *\n     * default: false\n     */\n    dry: boolean;\n\n    /**\n     * Write Logs to Console\n     * (Always enabled when dry is true)\n     *\n     * default: false\n     */\n    verbose: boolean;\n\n    /**\n     * Automatically remove all unused webpack assets on rebuild\n     *\n     * default: true\n     */\n    cleanStaleWebpackAssets: boolean;\n\n    /**\n     * Do not allow removal of current webpack assets\n     *\n     * default: true\n     */\n    protectWebpackAssets: boolean;\n\n    /**\n     * Removes files once prior to Webpack compilation\n     *   Not included in rebuilds (watch mode)\n     *\n     * Use !negative patterns to exclude files\n     *\n     * default: ['**\\/*']\n     */\n    cleanOnceBeforeBuildPatterns: string[];\n\n    /**\n     * Removes files after every build (including watch mode) that match this pattern.\n     * Used for files that are not created directly by Webpack.\n     *\n     * Use !negative patterns to exclude files\n     *\n     * default: disabled\n     */\n    cleanAfterEveryBuildPatterns: string[];\n\n    /**\n     * Allow clean patterns outside of process.cwd()\n     *\n     * requires dry option to be explicitly set\n     *\n     * default: false\n     */\n    dangerouslyAllowCleanPatternsOutsideProject: boolean;\n}\n\nclass CleanWebpackPlugin {\n    private readonly dry: boolean;\n    private readonly verbose: boolean;\n    private readonly cleanStaleWebpackAssets: boolean;\n    private readonly protectWebpackAssets: boolean;\n    private readonly cleanAfterEveryBuildPatterns: string[];\n    private readonly cleanOnceBeforeBuildPatterns: string[];\n    private readonly dangerouslyAllowCleanPatternsOutsideProject: boolean;\n    private currentAssets: string[];\n    private initialClean: boolean;\n    private outputPath: string;\n\n    constructor(options: Partial<Options> = {}) {\n        if (typeof options !== 'object' || Array.isArray(options) === true) {\n            throw new Error(`clean-webpack-plugin only accepts an options object. See:\n            https://github.com/johnagan/clean-webpack-plugin#options-and-defaults-optional`);\n        }\n\n        // @ts-ignore\n        if (options.allowExternal) {\n            throw new Error(\n                'clean-webpack-plugin: `allowExternal` option no longer supported. Use `dangerouslyAllowCleanPatternsOutsideProject`',\n            );\n        }\n\n        if (\n            options.dangerouslyAllowCleanPatternsOutsideProject === true &&\n            options.dry !== true &&\n            options.dry !== false\n        ) {\n            // eslint-disable-next-line no-console\n            console.warn(\n                'clean-webpack-plugin: dangerouslyAllowCleanPatternsOutsideProject requires dry: false to be explicitly set. Enabling dry mode',\n            );\n        }\n\n        this.dangerouslyAllowCleanPatternsOutsideProject =\n            options.dangerouslyAllowCleanPatternsOutsideProject === true ||\n            false;\n\n        this.dry =\n            options.dry === true || options.dry === false\n                ? options.dry\n                : this.dangerouslyAllowCleanPatternsOutsideProject === true ||\n                  false;\n\n        this.verbose = this.dry === true || options.verbose === true || false;\n\n        this.cleanStaleWebpackAssets =\n            options.cleanStaleWebpackAssets === true ||\n            options.cleanStaleWebpackAssets === false\n                ? options.cleanStaleWebpackAssets\n                : true;\n\n        this.protectWebpackAssets =\n            options.protectWebpackAssets === true ||\n            options.protectWebpackAssets === false\n                ? options.protectWebpackAssets\n                : true;\n\n        this.cleanAfterEveryBuildPatterns = Array.isArray(\n            options.cleanAfterEveryBuildPatterns,\n        )\n            ? options.cleanAfterEveryBuildPatterns\n            : [];\n\n        this.cleanOnceBeforeBuildPatterns = Array.isArray(\n            options.cleanOnceBeforeBuildPatterns,\n        )\n            ? options.cleanOnceBeforeBuildPatterns\n            : ['**/*'];\n\n        /**\n         * Store webpack build assets\n         */\n        this.currentAssets = [];\n\n        /**\n         * Only used with cleanOnceBeforeBuildPatterns\n         */\n        this.initialClean = false;\n\n        this.outputPath = '';\n\n        this.apply = this.apply.bind(this);\n        this.handleInitial = this.handleInitial.bind(this);\n        this.handleDone = this.handleDone.bind(this);\n        this.removeFiles = this.removeFiles.bind(this);\n    }\n\n    apply(compiler: Compiler) {\n        if (!compiler.options.output || !compiler.options.output.path) {\n            // eslint-disable-next-line no-console\n            console.warn(\n                'clean-webpack-plugin: options.output.path not defined. Plugin disabled...',\n            );\n\n            return;\n        }\n\n        this.outputPath = compiler.options.output.path;\n\n        /**\n         * webpack 4+ comes with a new plugin system.\n         *\n         * Check for hooks in-order to support old plugin system\n         */\n        const hooks = compiler.hooks;\n\n        if (this.cleanOnceBeforeBuildPatterns.length !== 0) {\n            if (hooks) {\n                hooks.compile.tap('clean-webpack-plugin', () => {\n                    this.handleInitial();\n                });\n            } else {\n                compiler.plugin('compile', () => {\n                    this.handleInitial();\n                });\n            }\n        }\n\n        if (hooks) {\n            hooks.done.tap('clean-webpack-plugin', (stats) => {\n                this.handleDone(stats);\n            });\n        } else {\n            compiler.plugin('done', (stats) => {\n                this.handleDone(stats);\n            });\n        }\n    }\n\n    /**\n     * Initially remove files from output directory prior to build.\n     *\n     * Only happens once.\n     *\n     * Warning: It is recommended to initially clean your build directory outside of webpack to minimize unexpected behavior.\n     */\n    handleInitial() {\n        if (this.initialClean) {\n            return;\n        }\n\n        this.initialClean = true;\n\n        this.removeFiles(this.cleanOnceBeforeBuildPatterns);\n    }\n\n    handleDone(stats: Stats) {\n        /**\n         * Do nothing if there is a webpack error\n         */\n        if (stats.hasErrors()) {\n            if (this.verbose) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'clean-webpack-plugin: pausing due to webpack errors',\n                );\n            }\n\n            return;\n        }\n\n        /**\n         * Fetch Webpack's output asset files\n         */\n        const assets = stats.toJson().assets.map((asset: { name: string }) => {\n            return asset.name;\n        });\n\n        /**\n         * Get all files that were in the previous build but not the current\n         *\n         * (relies on del's cwd: outputPath option)\n         */\n        const staleFiles = this.currentAssets.filter((previousAsset) => {\n            const assetCurrent = assets.includes(previousAsset) === false;\n\n            return assetCurrent;\n        });\n\n        /**\n         * Save assets for next compilation\n         */\n        this.currentAssets = assets.sort();\n\n        const removePatterns = [];\n\n        /**\n         * Remove unused webpack assets\n         */\n        if (this.cleanStaleWebpackAssets === true && staleFiles.length !== 0) {\n            removePatterns.push(...staleFiles);\n        }\n\n        /**\n         * Remove cleanAfterEveryBuildPatterns\n         */\n        if (this.cleanAfterEveryBuildPatterns.length !== 0) {\n            removePatterns.push(...this.cleanAfterEveryBuildPatterns);\n        }\n\n        if (removePatterns.length !== 0) {\n            this.removeFiles(removePatterns);\n        }\n    }\n\n    removeFiles(patterns: string[]) {\n        try {\n            const deleted = delSync(patterns, {\n                force: this.dangerouslyAllowCleanPatternsOutsideProject,\n                // Change context to build directory\n                cwd: this.outputPath,\n                dryRun: this.dry,\n                dot: true,\n                ignore: this.protectWebpackAssets ? this.currentAssets : [],\n            });\n\n            /**\n             * Log if verbose is enabled\n             */\n            if (this.verbose) {\n                deleted.forEach((file) => {\n                    const filename = path.relative(process.cwd(), file);\n\n                    const message = this.dry ? 'dry' : 'removed';\n\n                    /**\n                     * Use console.warn over .log\n                     * https://github.com/webpack/webpack/issues/1904\n                     * https://github.com/johnagan/clean-webpack-plugin/issues/11\n                     */\n                    // eslint-disable-next-line no-console\n                    console.warn(\n                        `clean-webpack-plugin: ${message} ${filename}`,\n                    );\n                });\n            }\n        } catch (error) {\n            const needsForce = /Cannot delete files\\/folders outside the current working directory\\./.test(\n                error.message,\n            );\n\n            if (needsForce) {\n                const message =\n                    'clean-webpack-plugin: Cannot delete files/folders outside the current working directory. Can be overridden with the `dangerouslyAllowCleanPatternsOutsideProject` option.';\n\n                throw new Error(message);\n            }\n\n            throw error;\n        }\n    }\n}\n\nexport default CleanWebpackPlugin;\n"],"file":"clean-webpack-plugin.js"}